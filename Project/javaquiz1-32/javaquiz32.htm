<! created by Surendran Velath>
<html><head>
<meta name="AccessType" Content="Free">
<title>Java certification Quiz</title>
<style>
 .tip{color:#b23c09;font-size:18px;font-weight:bold;font-family:arial}
 a:hover{color:red;font-family:verdana;font-size:22px;}
</style>
<script type="text/javascript" src="jquiz.js">
</script>
<link rel="stylesheet" type="text/css" href="mystyle.css">
</head>
<body>
<table class="outer">
<tr>
<td bgColor="#f3eff0">
<table class="inner">
<tr>
<td>	
<table cellSpacing=0 cellPadding=0 border=0>
<tr>
<td>
<font class="title">Java Quiz - 32

<p><a href="javaquiz31.htm">&#171;</a>&nbsp;<a href="javaquiz1.htm">1</a>&nbsp;<a href="javaquiz2.htm">2</a>&nbsp;<a href="javaquiz3.htm">3</a>&nbsp;<a href="javaquiz4.htm">4</a>&nbsp;<a href="javaquiz5.htm">5</a>&nbsp;<a href="javaquiz6.htm">6</a>&nbsp;<a href="javaquiz7.htm">7</a>&nbsp;<a href="javaquiz8.htm">8</a>&nbsp;<a href="javaquiz9.htm">9</a>&nbsp;<a href="javaquiz10.htm">10</a>&nbsp;<a href="javaquiz11.htm">11</a>&nbsp;<a href="javaquiz12.htm">12</a>&nbsp;<a href="javaquiz13.htm">13</a>&nbsp;<a href="javaquiz14.htm">14</a>&nbsp;<a href="javaquiz15.htm">15</a>&nbsp;<a href="javaquiz16.htm">16</a>&nbsp;<a href="javaquiz17.htm">17</a>&nbsp;<a href="javaquiz18.htm">18</a>&nbsp;<a href="javaquiz19.htm">19</a>&nbsp;<a href="javaquiz20.htm">20</a>&nbsp;<a href="javaquiz21.htm">21</a>&nbsp;<a href="javaquiz22.htm">22</a>&nbsp;<a href="javaquiz23.htm">23</a>&nbsp;<a href="javaquiz24.htm">24</a>&nbsp;<a href="javaquiz25.htm">25</a>&nbsp;<a href="javaquiz26.htm">26</a>&nbsp;<a href="javaquiz27.htm">27</a>&nbsp;<a href="javaquiz28.htm">28</a>&nbsp;<a href="javaquiz29.htm">29</a>&nbsp;<a href="javaquiz30.htm">30</a>&nbsp;<a href="javaquiz31.htm">31</a>&nbsp;32 <!a href="javaquiz33.htm">&#187;</a></p>
</font>

<p title="ArrayList" class="tip">1. Which of the following exceptions are checked by compiler?</p>
<b><font class="ques"><pre>
A. IOException
B. FileNotFoundException
C. NullPointerException
D. ArrayIndexOutOfBoundsException
</pre></b>
<font color=#000000><input onclick="ans(this.name,'correct')" type=radio name=1> a) <em>A, B</em>
<br><input onclick="ans(this.name,'wrong')" type=radio name=1> b) <em>A, B, D</em>
<br><input onclick="ans(this.name,'wrong')" type=radio name=1> c) <em>A, D</em>
<br><input onclick="ans(this.name,'wrong')" type=radio name=1> d) <em>All of them</em><br></font>
<div class="details" id=wrong1><b>Wrong!</b> Try again.</b><br></div>
<div class="details" id=wrong1e><b>Wrong Again!</b> Try one more chance.</b></div>
<div class="details" id=wrong1a><b>Wrong!</b><br>The correct answer is <i>a) A, B</i> </div>
<div class="detailsr" id=correct1><b>Correct! </b><br> <i> A, B</i> </div>

<p title="StringBuilder" class="tip">2. What is the output?</p>
<b><font class="ques"><pre>
String s1 = "program";
s1.toUpperCase();
System.out.println(s1);</pre>
</b><font color=#000000><input onclick="ans(this.name,'wrong')" type=radio name=2> a) <em>PROGRAM</em>
<br><input onclick="ans(this.name,'correct')" type=radio name=2> b) <em>program</em>
<br><input onclick="ans(this.name,'wrong')" type=radio name=2> c) <em>Program</em>
<br><input onclick="ans(this.name,'wrong')" type=radio name=2> d) <em>Compile error</em><br><br>
</font><div class="details" id=wrong2><b>Wrong!</b> Try again.</b><br></div>
<div class="details" id=wrong2e><b>Wrong Again!</b> Try one more chance.</b></div>
<div class="details" id=wrong2a><b>Wrong! </b>The correct answer is <i>b) program. String is immutable.</i> </div>
<div class="detailsr" id=correct2><b>Correct! </b> <br><i> program. String is immutable.</i> </div>

<p title="Exception" class="tip">3. Which of the following methods are of Collection interface?</p>
<b><font class="ques"><pre>
A. remove(Object o)
B. clear()
C. get(int index)
D. iterator()
</pre>
</b><font color=#000000><input onclick="ans(this.name,'wrong')" type=radio name=3> a) <em>All of them</em>
<br><input onclick="ans(this.name,'wrong')" type=radio name=3> b) <em>A, B, C</em>
<br><input onclick="ans(this.name,'wrong')" type=radio name=3> c) <em>A, C, D</em>
<br><input onclick="ans(this.name,'correct')" type=radio name=3> d) <em>A, B, D<br>
<br></font><div class="details" id=wrong3><b>Wrong!</b> Try again.</b><br></div>
<div class="details" id=wrong3e><b>Wrong Again!</b> Try one more chance.</b></div>
<div class="details" id=wrong3a><b>Wrong!</b> The correct answer is <i>d) A, B, D </i> <br>get(int index) belongs to List </div>
<div class="detailsr" id=correct3><b>Correct! </b><i> A, B, D </i><br>get(int index) belongs to List</div>


<p title="package" class="tip">4. What is the output?</p>
<b><font class="ques"><pre>
public class Test {
  private int a;
  public int calculate() {
     try {
         int a = 5*5;
     }
     catch(Exception e){
     }
     return a;
  }
  public static void main(String[] args) {
    System.out.println(new Test().calculate());
  }  
}</pre>
</b><font color=#000000><input onclick="ans(this.name,'wrong')" type=radio name=4> a) <em>Compile error</em>
<br><input onclick="ans(this.name,'wrong')" type=radio name=4> b) <em>Exception thrown</em>
<br><input onclick="ans(this.name,'wrong')" type=radio name=4> c) <em>25</em>
<br><input onclick="ans(this.name,'correct')" type=radio name=4> d) <em>0</em><br>
<br></font><div class="details" id=wrong4><b>Wrong!</b> Try again.</b><br></div>
<div class="details" id=wrong4e><b>Wrong Again!</b> Try one more chance.</b></div>
<div class="details" id=wrong4a><b>Wrong! </b><br>The correct answer is <i>d) 0</i>, scope of local variable 'a' is within try block </div>
<div class="detailsr" id=correct4><b>Correct! </b> <i> 0</i>, scope of local variable 'a' is within try block </div>
<p title="ArrayList" class="tip">5. What is the output? </p>
<b><font class="ques"><pre>
public class TestClass {
  public static void main(String[] args) {
     for(int i=1;i<=5;i++){
       if(i==3) continue;
       System.out.print(i+" ");
       if(i==3) break;
     }
  }
}</pre>
</b><font color=#000000><input onclick="ans(this.name,'wrong')" type=radio name=5> a) <em>1 2</em>
<br><input onclick="ans(this.name,'wrong')" type=radio name=5> b) <em>1 2 3 4 5</em>
<br><input onclick="ans(this.name,'correct')" type=radio name=5> c) <em>1 2 4 5</em>
<br><input onclick="ans(this.name,'wrong')" type=radio name=5> d) <em>Compilation fails</em>
<br>
<br></font><div class="details" id=wrong5><b>Wrong!</b> Try again.</b>.
<br></div>
<div class="details" id=wrong5e><b>Wrong Again!</b> Try one more chance.</b></div>
<div class="details" id=wrong5a><b>Wrong! </b><br>The correct answer is <i>c) 1 2 4 5</i>, continue prevents the break happening at i=3 and 3 is never printed</div>
<div class="detailsr" id=correct5><b>Correct! </b><br><i> 1 2 4 5</i>, continue prevents the break happening at i=3 and 3 is never printed </div>

<!--

<p title="super()" class="tip">6. What can be written at XX?</p>
<b><font class="ques"><pre>
class SuperClass {
   SuperClass(int x) {
     System.out.println("Super");
   }
}
public class SubClass extends SuperClass {
   SubClass() {
      XX
      System.out.println("Sub");
   }
   SubClass(int x) {
      super(x);
   }
}
A) this(10);
B) super(10);
C) SuperClass(10);
D) super.SuperClass (10);</pre></b>
<font color=#000000>
<input onclick="ans(this.name,'wrong')" type=radio name=6> a) <em>only B</em>
<br><input onclick="ans(this.name,'correct')" type=radio name=6> b) <em>A or B</em>
<br><input onclick="ans(this.name,'wrong')" type=radio name=6> c) <em>only A</em>
<br><input onclick="ans(this.name,'wrong')" type=radio name=6> d) <em>false true</em><br></font>
<div class="details" id=wrong6><b>Wrong!</b> Try again.</b><br></div>
<div class="details" id=wrong6e><b>Wrong Again!</b> Try one more chance.</b></div>
<div class="details" id=wrong6a><b>Wrong!</b><br>The correct answer is <i>a) A or B</i>  : SuperClass does not have default constructor. The default super() should be replaced with this(x) or super(10)</div>
<div class="detailsr" id=correct6><b>Correct! </b><br> A or B : SuperClass does not have default constructor. The default super() should be replaced with this(x) or super(10)</div>

<p title="static method" class="tip">7. What is the output?</p>
<b><font class="ques"><pre>
abstract class Writer {
   public static void write() {
     System.out.println("Writing...");
   }
}
class Author extends Writer {
    public static void write() {
      System.out.println("Writing book");
   }
}
public class Programmer extends Writer {
   public static void write() {
     System.out.println("Writing code");
   }
   public static void main(String[] args) {
      Writer w = new Programmer();
      w.write();
   }
}</pre></b>
<font color=#000000>
<input onclick="ans(this.name,'wrong')" type=radio name=7> a) <em>Writing code</em>
<br><input onclick="ans(this.name,'correct')" type=radio name=7> b) <em>Writing...</em>
<br><input onclick="ans(this.name,'wrong')" type=radio name=7> c) <em>Writing book</em>
<br><input onclick="ans(this.name,'wrong')" type=radio name=7> d) <em>Compilation fails</em></font>
<div class="details" id=wrong7><b>Wrong!</b> Try again.</b><br></div>
<div class="details" id=wrong7e><b>Wrong Again!</b> Try one more chance.</b></div>
<div class="details" id=wrong7a><b>Wrong!</b><br>The correct answer is b) Writing...<i> </i></div>
<div class="detailsr" id=correct7><b>Correct! </b><br> Writing...<i> </i></div>
-->
<tr>
<td><br><a href="./javaquiz31.htm"><img src="previous.jpg"></a>
&nbsp;<!a href="./javaquiz33.htm"><!img src="next.jpg"></a> </td>
</table></td></tr></table>
</body></html>
